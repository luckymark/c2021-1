#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int main(int argc, const char* argv[])
{
    //定义一个二维数组存放迷宫
    char arr[10][10] = {
        {'#','#','#','#','#','#','#','#','#','#'},
        {'#','#','#','#','#','#','#',' ',' ',' '},
        {'#',' ','#','#','#','#','#',' ','#','#'},
        {'#','@','#','#','#','#','#',' ','#','#'},
        {'#',' ','#',' ',' ',' ','#',' ','#','#'},
        {'#',' ','#',' ','#',' ','#',' ','#','#'},
        {'#',' ','#',' ','#',' ',' ',' ','#','#'},
        {'#',' ',' ',' ','#','#','#','#','#','#'},
        {'#',' ','#','#','#','#','#','#','#','#'},
        {'#','#','#','#','#','#','#','#','#','#'},
    };
    //存放起始时间
    int seconds = time((time_t*)NULL);
    //玩家的坐标
    int lx = 3, ly = 1;
    //开始死循环
    for (;;)
    {
        system("clear");    //清屏
        printf("\n");
        for (int i = 0; i < 10; i++)   //打印地图
        {
            for (int j = 0; j < 10; j++)
            {
                printf("%c ", arr[i][j]);
            }
            printf("\n");
        }
        if (1 == lx && 9 == ly)  //判断玩家坐标是否正在终点，同时将判断延后，以打印出最后一遍地图
        {
            printf("结束！,用时%d秒", time((time_t*)NULL) - seconds);		//打印时间并结束程序
            return 0;
        }

        switch (getchar())     //获取方向键并为其设置switch开关
        {
        case 186:       //方向左
        {
            if ('#' != arr[lx][ly - 1])
            {
                arr[lx][ly - 1] = '@';
                arr[lx][ly] = ' ';
                ly -= 1;        //更新地图和玩家坐标
            }
            break;
        }
        case 185:       //方向右
        {
            if ('#' != arr[lx][ly + 1])
            {
                arr[lx][ly + 1] = '@';
                arr[lx][ly] = ' ';
                ly += 1;
            }
            break;
        }
        case 184:       //方向下
        {
            if ('#' != arr[lx + 1][ly])
            {
                arr[lx + 1][ly] = '@';
                arr[lx][ly] = ' ';
                lx += 1;
            }
            break;
        }
        case 183:       //方向上
        {
            if ('#' != arr[lx - 1][ly])
            {
                arr[lx - 1][ly] = '@';
                arr[lx][ly] = ' ';
                lx -= 1;
            }
            break;
        }
        }
    }
}